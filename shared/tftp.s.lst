                                                        // BEEHIVE GCC 2010.07.09.18.09  (no pre-modify) (mult)
                                                        // ------------------------------------------------------------
                                                        // Standard as definitions
                                                        
$0                                                      zero = $0    // fixed zero
$0                                                      void = $0    // void destination
$1                                                      r1 = $1      // function return value
$2                                                      r2 = $2      // not callee save
$3                                                      r3 = $3      // not callee save, function argument 1
$4                                                      r4 = $4      // not callee save, function argument 2
$5                                                      r5 = $5      // not callee save, function argument 3
$6                                                      r6 = $6      // not callee save, function argument 4
$7                                                      r7 = $7      // not callee save, function argument 5
$8                                                      r8 = $8      // not callee save, function argument 6
$9                                                      r9 = $9      // callee save
$10                                                     r10 = $10    // callee save
$11                                                     r11 = $11    // callee save
$12                                                     r12 = $12    // callee save
$13                                                     r13 = $13    // callee save
$14                                                     r14 = $14    // callee save
$15                                                     r15 = $15    // callee save
$16                                                     r16 = $16    // callee save
$17                                                     r17 = $17    // callee save
$18                                                     r18 = $18    // callee save
$19                                                     r19 = $19    // callee save
$20                                                     r20 = $20    // callee save
$21                                                     r21 = $21    // callee save
$22                                                     r22 = $22    // callee save
$23                                                     fp = $23     // callee save, frame pointer
$24                                                     t1 = $24     // not callee save, temporary 1, not avail for reg alloc
$25                                                     t2 = $25     // not callee save, temporary 2, not avail for reg alloc
$26                                                     t3 = $26     // not callee save, temporary 3, not avail for reg alloc
$27                                                     p1 = $27     // not callee save, platform 1, not avail for reg alloc
$28                                                     sp = $28     // callee save, stack pointer
$29                                                     vb = $29     // not callee save, rw & rb only, not avail for reg alloc
                                                        
  00000000                                                  .assume   zero,0
                                                        
                                                        // ------------------------------------------------------------
                                                                .file   "tftp.c"
                                                                .code
                                                                .alignw 1
                                                                .globl  _appendStr
                                                                .type   _appendStr, @function
C 00000000                                              _appendStr:
C 00000000 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000001 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000002 27400307  AQR = $29 = $4 OR 00000000                 aqr_ld      vb,r4
C 00000003 e8400c05  $1 = RQ ADD $3                             add         r1,rq,r3
C 00000004 2e000305  $24 = $5 OR 00000000                       ld          t1,r5
C 00000005 c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 00000006 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 00000007 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000008 c883fe85  $2 = $25 AND 000000ff                      and         r2,t2,255
C 00000009 0e007205  $24 = $1 ADD 0000001c                      add         t1,r1,28
C 0000000a 16400305  $25 = $2 OR 00000000                       ld          t2,r2
C 0000000b c7460e81  $29 = $24 AND 00000003 LSL 3               and_lsl     vb,t1,3,3
C 0000000c 00000003* LINK = 00000000                            x_lli       ___codetable_store_byte_8i
C 0000000d f0007408  CALL LINK ADD $29                          call_add    link,vb
C 0000000e 27400307  AQR = $29 = $4 OR 00000000                 aqr_ld      vb,r4
C 0000000f e8800605  $2 = RQ ADD 00000001                       add         r2,rq,1
C 00000010 27400306  AQW = $29 = $4 OR 00000000                 aqw_ld      vb,r4
C 00000011 17c00305  WQ = $31 = $2 OR 00000000                  ld          wq,r2
C 00000012 2e000305  $24 = $5 OR 00000000                       ld          t1,r5
C 00000013 c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 00000014 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 00000015 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000016 c843fe85  $1 = $25 AND 000000ff                      and         r1,t2,255
C 00000017 0f400245  $29 = $1 SUB 00000000                      sub         vb,r1,0
C 00000018 f800660a  JZ PC ADD 00000019                         jz          .L4
C 00000019 018000c5  $6 = $0 ANDN $0                            ld          r6,0
C 0000001a                                              .L3:
C 0000001a 31800605  $6 = $6 ADD 00000001                       add         r6,r6,1
C 0000001b 18400805  $1 = $3 ADD $2                             add         r1,r3,r2
C 0000001c 2e001805  $24 = $5 ADD $6                            add         t1,r5,r6
C 0000001d c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 0000001e 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 0000001f f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000020 c883fe85  $2 = $25 AND 000000ff                      and         r2,t2,255
C 00000021 0e007205  $24 = $1 ADD 0000001c                      add         t1,r1,28
C 00000022 16400305  $25 = $2 OR 00000000                       ld          t2,r2
C 00000023 c7460e81  $29 = $24 AND 00000003 LSL 3               and_lsl     vb,t1,3,3
C 00000024 00000003* LINK = 00000000                            x_lli       ___codetable_store_byte_8i
C 00000025 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000026 27400307  AQR = $29 = $4 OR 00000000                 aqr_ld      vb,r4
C 00000027 e8800605  $2 = RQ ADD 00000001                       add         r2,rq,1
C 00000028 27400306  AQW = $29 = $4 OR 00000000                 aqw_ld      vb,r4
C 00000029 17c00305  WQ = $31 = $2 OR 00000000                  ld          wq,r2
C 0000002a 2e001805  $24 = $5 ADD $6                            add         t1,r5,r6
C 0000002b c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 0000002c 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 0000002d f0007408  CALL LINK ADD $29                          call_add    link,vb
C 0000002e c843fe85  $1 = $25 AND 000000ff                      and         r1,t2,255
C 0000002f 0f400245  $29 = $1 SUB 00000000                      sub         vb,r1,0
C 00000030 f8005a4e  JNZ PC SUB 00000016                        jnz         .L3
C 00000031                                              .L4:
C 00000031 e7000207  AQR = $28 = $28 ADD 00000000               aqr_add     sp,sp,0
C 00000032 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000033 e800030c  J RQ OR 00000000                           j           rq
                                                                .size   _appendStr, .-_appendStr
                                                                .data
D 00000000                                              .LC0:
D 00000000 6f  63  74  65                                       .string "octet"
D 00000004 74  00                                       
D 00000006                                              .LC1:
D 00000006 54  69                                               .string "Timeout"
D 00000008 6d  65  6f  75                               
D 0000000c 74  00                                       
D 0000000e                                              .LC2:
D 0000000e 55  6e                                               .string "Unknown opcode from server"
D 00000010 6b  6e  6f  77                               
D 00000014 6e  20  6f  70                               
D 00000018 63  6f  64  65                               
D 0000001c 20  66  72  6f                               
D 00000020 6d  20  73  65                               
D 00000024 72  76  65  72                               
D 00000028 00                                           
                                                                .code
                                                                .alignw 1
                                                                .globl  _tftp_get
                                                                .type   _tftp_get, @function
C 00000034                                              _tftp_get:
C 00000034 e7001246  AQW = $28 = $28 SUB 00000004               aqw_sub     sp,sp,4
C 00000035 f7c00305  WQ = $31 = LINK OR 00000000                ld          wq,link
C 00000036 e700f245  $28 = $28 SUB 0000003c                     sub         sp,sp,60
C 00000037 e740d206  AQW = $29 = $28 ADD 00000034               aqw_add     vb,sp,52
C 00000038 b7c00305  WQ = $31 = $22 OR 00000000                 ld          wq,r22
C 00000039 e740c206  AQW = $29 = $28 ADD 00000030               aqw_add     vb,sp,48
C 0000003a afc00305  WQ = $31 = $21 OR 00000000                 ld          wq,r21
C 0000003b e740b206  AQW = $29 = $28 ADD 0000002c               aqw_add     vb,sp,44
C 0000003c a7c00305  WQ = $31 = $20 OR 00000000                 ld          wq,r20
C 0000003d e740a206  AQW = $29 = $28 ADD 00000028               aqw_add     vb,sp,40
C 0000003e 9fc00305  WQ = $31 = $19 OR 00000000                 ld          wq,r19
C 0000003f e7409206  AQW = $29 = $28 ADD 00000024               aqw_add     vb,sp,36
C 00000040 97c00305  WQ = $31 = $18 OR 00000000                 ld          wq,r18
C 00000041 e7408206  AQW = $29 = $28 ADD 00000020               aqw_add     vb,sp,32
C 00000042 8fc00305  WQ = $31 = $17 OR 00000000                 ld          wq,r17
C 00000043 e7407206  AQW = $29 = $28 ADD 0000001c               aqw_add     vb,sp,28
C 00000044 87c00305  WQ = $31 = $16 OR 00000000                 ld          wq,r16
C 00000045 e7406206  AQW = $29 = $28 ADD 00000018               aqw_add     vb,sp,24
C 00000046 7fc00305  WQ = $31 = $15 OR 00000000                 ld          wq,r15
C 00000047 e7405206  AQW = $29 = $28 ADD 00000014               aqw_add     vb,sp,20
C 00000048 77c00305  WQ = $31 = $14 OR 00000000                 ld          wq,r14
C 00000049 e7404206  AQW = $29 = $28 ADD 00000010               aqw_add     vb,sp,16
C 0000004a 6fc00305  WQ = $31 = $13 OR 00000000                 ld          wq,r13
C 0000004b e7403206  AQW = $29 = $28 ADD 0000000c               aqw_add     vb,sp,12
C 0000004c 67c00305  WQ = $31 = $12 OR 00000000                 ld          wq,r12
C 0000004d e7402206  AQW = $29 = $28 ADD 00000008               aqw_add     vb,sp,8
C 0000004e 5fc00305  WQ = $31 = $11 OR 00000000                 ld          wq,r11
C 0000004f e7401206  AQW = $29 = $28 ADD 00000004               aqw_add     vb,sp,4
C 00000050 57c00305  WQ = $31 = $10 OR 00000000                 ld          wq,r10
C 00000051 e7400306  AQW = $29 = $28 OR 00000000                aqw_ld      vb,sp
C 00000052 4fc00305  WQ = $31 = $9 OR 00000000                  ld          wq,r9
C 00000053 1a400305  $9 = $3 OR 00000000                        ld          r9,r3
C 00000054 22800305  $10 = $4 OR 00000000                       ld          r10,r4
C 00000055 2d800305  $22 = $5 OR 00000000                       ld          r22,r5
C 00000056 00000003* LINK = 00000000                            long_call   _enet_alloc
C 00000057 f0000308* CALL LINK OR 00000000              
C 00000058 0ac00305  $11 = $1 OR 00000000                       ld          r11,r1
C 00000059 00c000c5  $3 = $0 ANDN $0                            ld          r3,0
C 0000005a 00000003* LINK = 00000000                            long_call   _udp_allocPort
C 0000005b f0000308* CALL LINK OR 00000000              
C 0000005c 0bc00305  $15 = $1 OR 00000000                       ld          r15,r1
C 0000005d 48b00301  $2 = $9 OR 00000000 LSL 24                 lsl         r2,r9,24
C 0000005e 48700300  $1 = $9 OR 00000000 LSR 24                 lsr         r1,r9,24
C 0000005f 10800505  $2 = $2 OR $1                              or          r2,r2,r1
C 00000060 48500300  $1 = $9 OR 00000000 LSR 8                  lsr         r1,r9,8
C 00000061 0000ff03  LINK = 0000ff00                            lli         65280
C 00000062 f0400485  $1 = LINK AND $1                           and         r1,link,r1
C 00000063 10800505  $2 = $2 OR $1                              or          r2,r2,r1
C 00000064 4a500301  $9 = $9 OR 00000000 LSL 8                  lsl         r9,r9,8
C 00000065 00ff0003  LINK = 00ff0000                            lli         16711680
C 00000066 f2402485  $9 = LINK AND $9                           and         r9,link,r9
C 00000067 5f404206  AQW = $29 = $11 ADD 00000010               aqw_add     vb,r11,16
C 00000068 17c02505  WQ = $31 = $2 OR $9                        or          wq,r2,r9
C 00000069 5e005a05  $24 = $11 ADD 00000016                     add         t1,r11,22
C 0000006a 06511701  $25 = $0 OR 00000045 LSL 8                 or_lsl      t2,zero,69,8
C 0000006b c7440a81  $29 = $24 AND 00000002 LSL 2               and_lsl     vb,t1,2,2
C 0000006c 00000003* LINK = 00000000                            x_lli       ___codetable_store_half_8i
C 0000006d f0007408  CALL LINK ADD $29                          call_add    link,vb
C 0000006e 78500301  $1 = $15 OR 00000000 LSL 8                 lsl         r1,r15,8
C 0000006f 78900300  $2 = $15 OR 00000000 LSR 8                 lsr         r2,r15,8
C 00000070 08400905  $1 = $1 OR $2                              or          r1,r1,r2
C 00000071 5e005205  $24 = $11 ADD 00000014                     add         t1,r11,20
C 00000072 0e600301  $25 = $1 OR 00000000 LSL 16                lsl         t2,r1,16
C 00000073 c7400ac7  AQR = $29 = $24 ANDN 00000002              aqr_andn    vb,t1,2     // fetch word
C 00000074 07407506  AQW = $29 = $0 OR $29                      aqw_ld      vb,vb       // store word
C 00000075 ee200300  $24 = RQ OR 00000000 LSR 16                lsr         t1,rq,16    // read, rotate, mask half 0
C 00000076 c7e06502  WQ = $31 = $24 OR $25 ROR 16               or_rol      wq,t1,t2,16 // insert half 0, rotate, write
C 00000077 5d407205  $21 = $11 ADD 0000001c                     add         r21,r11,28
C 00000078 5e007205  $24 = $11 ADD 0000001c                     add         t1,r11,28
C 00000079 06650301  $25 = $0 OR 00000040 LSL 18                or_lsl      t2,zero,64,18
C 0000007a c7400ac7  AQR = $29 = $24 ANDN 00000002              aqr_andn    vb,t1,2     // fetch word
C 0000007b 07407506  AQW = $29 = $0 OR $29                      aqw_ld      vb,vb       // store word
C 0000007c ee200300  $24 = RQ OR 00000000 LSR 16                lsr         t1,rq,16    // read, rotate, mask half 0
C 0000007d c7e06502  WQ = $31 = $24 OR $25 ROR 16               or_rol      wq,t1,t2,16 // insert half 0, rotate, write
C 0000007e 56000305  $24 = $10 OR 00000000                      ld          t1,r10
C 0000007f c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 00000080 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 00000081 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000082 c843fe85  $1 = $25 AND 000000ff                      and         r1,t2,255
C 00000083 5e007a05  $24 = $11 ADD 0000001e                     add         t1,r11,30
C 00000084 0e400305  $25 = $1 OR 00000000                       ld          t2,r1
C 00000085 c7460e81  $29 = $24 AND 00000003 LSL 3               and_lsl     vb,t1,3,3
C 00000086 00000003* LINK = 00000000                            x_lli       ___codetable_store_byte_8i
C 00000087 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000088 56000305  $24 = $10 OR 00000000                      ld          t1,r10
C 00000089 c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 0000008a 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 0000008b f0007408  CALL LINK ADD $29                          call_add    link,vb
C 0000008c c843fe85  $1 = $25 AND 000000ff                      and         r1,t2,255
C 0000008d 010000c5  $4 = $0 ANDN $0                            ld          r4,0
C 0000008e 0f400245  $29 = $1 SUB 00000000                      sub         vb,r1,0
C 0000008f f803be0a  JZ PC ADD 000000ef                         jz          .L27
C 00000090                                              .L23:
C 00000090 21000605  $4 = $4 ADD 00000001                       add         r4,r4,1
C 00000091 58401005  $1 = $11 ADD $4                            add         r1,r11,r4
C 00000092 56001005  $24 = $10 ADD $4                           add         t1,r10,r4
C 00000093 c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 00000094 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 00000095 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000096 c883fe85  $2 = $25 AND 000000ff                      and         r2,t2,255
C 00000097 0e007a05  $24 = $1 ADD 0000001e                      add         t1,r1,30
C 00000098 16400305  $25 = $2 OR 00000000                       ld          t2,r2
C 00000099 c7460e81  $29 = $24 AND 00000003 LSL 3               and_lsl     vb,t1,3,3
C 0000009a 00000003* LINK = 00000000                            x_lli       ___codetable_store_byte_8i
C 0000009b f0007408  CALL LINK ADD $29                          call_add    link,vb
C 0000009c 20800e05  $2 = $4 ADD 00000003                       add         r2,r4,3
C 0000009d 56001005  $24 = $10 ADD $4                           add         t1,r10,r4
C 0000009e c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 0000009f 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 000000a0 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 000000a1 c843fe85  $1 = $25 AND 000000ff                      and         r1,t2,255
C 000000a2 0f400245  $29 = $1 SUB 00000000                      sub         vb,r1,0
C 000000a3 f8004e4e  JNZ PC SUB 00000013                        jnz         .L23
C 000000a4 22401205  $9 = $4 ADD 00000004                       add         r9,r4,4
C 000000a5                                              .L11:
C 000000a5 58400805  $1 = $11 ADD $2                            add         r1,r11,r2
C 000000a6 0e007205  $24 = $1 ADD 0000001c                      add         t1,r1,28
C 000000a7 0641be05  $25 = $0 ADD 0000006f                      ld          t2,111
C 000000a8 c7460e81  $29 = $24 AND 00000003 LSL 3               and_lsl     vb,t1,3,3
C 000000a9 00000003* LINK = 00000000                            x_lli       ___codetable_store_byte_8i
C 000000aa f0007408  CALL LINK ADD $29                          call_add    link,vb
C 000000ab 00000003* LINK = 00000000                            long_ld     r2,.LC0+1
C 000000ac f0800705* $2 = LINK OR 00000001              
C 000000ad 48407205  $1 = $9 ADD 0000001c                       add         r1,r9,28
C 000000ae 58c00405  $3 = $11 ADD $1                            add         r3,r11,r1
C 000000af                                              .L9:
C 000000af 16000305  $24 = $2 OR 00000000                       ld          t1,r2
C 000000b0 c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 000000b1 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 000000b2 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 000000b3 c843fe85  $1 = $25 AND 000000ff                      and         r1,t2,255
C 000000b4 1e000305  $24 = $3 OR 00000000                       ld          t1,r3
C 000000b5 0e400305  $25 = $1 OR 00000000                       ld          t2,r1
C 000000b6 c7460e81  $29 = $24 AND 00000003 LSL 3               and_lsl     vb,t1,3,3
C 000000b7 00000003* LINK = 00000000                            x_lli       ___codetable_store_byte_8i
C 000000b8 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 000000b9 4a400605  $9 = $9 ADD 00000001                       add         r9,r9,1
C 000000ba 16000305  $24 = $2 OR 00000000                       ld          t1,r2
C 000000bb c7440e81  $29 = $24 AND 00000003 LSL 2               and_lsl     vb,t1,3,2
C 000000bc 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_byte_4i
C 000000bd f0007408  CALL LINK ADD $29                          call_add    link,vb
C 000000be c843fe85  $1 = $25 AND 000000ff                      and         r1,t2,255
C 000000bf 10800605  $2 = $2 ADD 00000001                       add         r2,r2,1
C 000000c0 18c00605  $3 = $3 ADD 00000001                       add         r3,r3,1
C 000000c1 0f400245  $29 = $1 SUB 00000000                      sub         vb,r1,0
C 000000c2 f8004e4e  JNZ PC SUB 00000013                        jnz         .L9
C 000000c3 04000605  $16 = $0 ADD 00000001                      ld          r16,1
C 000000c4 00000003* LINK = 00000000                            long_ld     r19,_udp_send
C 000000c5 f4c00305* $19 = LINK OR 00000000             
C 000000c6 e480e205  $18 = $28 ADD 00000038                     add         r18,sp,56
C 000000c7 00000003* LINK = 00000000                            long_ld     r17,_udp_recv
C 000000c8 f4400305* $17 = LINK OR 00000000             
C 000000c9 00000003* LINK = 00000000                            long_ld     r20,_udp_recvDone
C 000000ca f5000305* $20 = LINK OR 00000000             
C 000000cb                                              .L21:
C 000000cb 028000c5  $10 = $0 ANDN $0                           ld          r10,0
C 000000cc                                              .L12:
C 000000cc 58c00305  $3 = $11 OR 00000000                       ld          r3,r11
C 000000cd 49000305  $4 = $9 OR 00000000                        ld          r4,r9
C 000000ce 98000308  CALL $19 OR 00000000                       call        r19
C 000000cf 90c00305  $3 = $18 OR 00000000                       ld          r3,r18
C 000000d0 79000305  $4 = $15 OR 00000000                       ld          r4,r15
C 000000d1 002dc6c3  LINK = 002dc6c0                            long_ld     r5,3000000
C 000000d2 f1400305  $5 = LINK OR 00000000              
C 000000d3 018000c5  $6 = $0 ANDN $0                            ld          r6,0
C 000000d4 88000308  CALL $17 OR 00000000                       call        r17
C 000000d5 09000305  $4 = $1 OR 00000000                        ld          r4,r1
C 000000d6 e740e207  AQR = $29 = $28 ADD 00000038               aqr_add     vb,sp,56
C 000000d7 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 000000d8 1f400245  $29 = $3 SUB 00000000                      sub         vb,r3,0
C 000000d9 f8008e0a  JZ PC ADD 00000023                         jz          .L14
C 000000da 1f400ec7  AQR = $29 = $3 ANDN 00000003               aqr_andn    vb,r3,3     // fetch word
C 000000db e883fe85  $2 = RQ AND 000000ff                       and         r2,rq,255
C 000000dc 10403e85  $1 = $2 AND 0000000f                       and         r1,r2,15
C 000000dd 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 000000de 18400405  $1 = $3 ADD $1                             add         r1,r3,r1
C 000000df 0b002205  $12 = $1 ADD 00000008                      add         r12,r1,8
C 000000e0 0b803205  $14 = $1 ADD 0000000c                      add         r14,r1,12
C 000000e1 23401245  $13 = $4 SUB 00000004                      sub         r13,r4,4
C 000000e2 0e002205  $24 = $1 ADD 00000008                      add         t1,r1,8
C 000000e3 c7400ac7  AQR = $29 = $24 ANDN 00000002              aqr_andn    vb,t1,2     // fetch word
C 000000e4 07600640  $29 = $0 SUB 00000001 LSR 16               sub_lsr     vb,zero,1,16
C 000000e5 e8407485  $1 = RQ AND $29                            and         r1,rq,vb
C 000000e6 08900301  $2 = $1 OR 00000000 LSL 8                  lsl         r2,r1,8
C 000000e7 08500300  $1 = $1 OR 00000000 LSR 8                  lsr         r1,r1,8
C 000000e8 10800505  $2 = $2 OR $1                              or          r2,r2,r1
C 000000e9 16600301  $25 = $2 OR 00000000 LSL 16                lsl         t2,r2,16
C 000000ea c8a00304  $2 = $25 OR 00000000 ASR 16                asr         r2,t2,16
C 000000eb 00400e05  $1 = $0 ADD 00000003                       ld          r1,3
C 000000ec 17400445  $29 = $2 SUB $1                            sub         vb,r2,r1
C 000000ed f800ee0e  JNZ PC ADD 0000003b                        jnz         .L15
C 000000ee 66000a05  $24 = $12 ADD 00000002                     add         t1,r12,2
C 000000ef c7420a81  $29 = $24 AND 00000002 LSL 1               and_lsl     vb,t1,2,1
C 000000f0 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_half_4i
C 000000f1 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 000000f2 ce600301  $25 = $25 OR 00000000 LSL 16               lsl         t2,t2,16
C 000000f3 c8600300  $1 = $25 OR 00000000 LSR 16                lsr         r1,t2,16
C 000000f4 08900301  $2 = $1 OR 00000000 LSL 8                  lsl         r2,r1,8
C 000000f5 08500300  $1 = $1 OR 00000000 LSR 8                  lsr         r1,r1,8
C 000000f6 10800505  $2 = $2 OR $1                              or          r2,r2,r1
C 000000f7 16600301  $25 = $2 OR 00000000 LSL 16                lsl         t2,r2,16
C 000000f8 c8a00300  $2 = $25 OR 00000000 LSR 16                lsr         r2,t2,16
C 000000f9 17404045  $29 = $2 SUB $16                           sub         vb,r2,r16
C 000000fa f800fa0a  JZ PC ADD 0000003e                         jz          .L28
C 000000fb a0000308  CALL $20 OR 00000000                       call        r20
C 000000fc                                              .L14:
C 000000fc 52800605  $10 = $10 ADD 00000001                     add         r10,r10,1
C 000000fd 00801605  $2 = $0 ADD 00000005                       ld          r2,5
C 000000fe 57400845  $29 = $10 SUB $2                           sub         vb,r10,r2
C 000000ff f800ce4e  JNZ PC SUB 00000033                        jnz         .L12
C 00000100 78c00305  $3 = $15 OR 00000000                       ld          r3,r15
C 00000101 00000003* LINK = 00000000                            long_call   _udp_freePort
C 00000102 f0000308* CALL LINK OR 00000000              
C 00000103 58c00305  $3 = $11 OR 00000000                       ld          r3,r11
C 00000104 00000003* LINK = 00000000                            long_call   _enet_free
C 00000105 f0000308* CALL LINK OR 00000000              
C 00000106 00000003* LINK = 00000000                            long_ld     r10,.LC1
C 00000107 f2801b05* $10 = LINK OR 00000006             
C 00000108                                              .L13:
C 00000108 50400305  $1 = $10 OR 00000000                       ld          r1,r10
C 00000109 e7400307  AQR = $29 = $28 OR 00000000                aqr_ld      vb,sp
C 0000010a ea400305  $9 = RQ OR 00000000                        ld          r9,rq
C 0000010b e7401207  AQR = $29 = $28 ADD 00000004               aqr_add     vb,sp,4
C 0000010c ea800305  $10 = RQ OR 00000000                       ld          r10,rq
C 0000010d e7402207  AQR = $29 = $28 ADD 00000008               aqr_add     vb,sp,8
C 0000010e eac00305  $11 = RQ OR 00000000                       ld          r11,rq
C 0000010f e7403207  AQR = $29 = $28 ADD 0000000c               aqr_add     vb,sp,12
C 00000110 eb000305  $12 = RQ OR 00000000                       ld          r12,rq
C 00000111 e7404207  AQR = $29 = $28 ADD 00000010               aqr_add     vb,sp,16
C 00000112 eb400305  $13 = RQ OR 00000000                       ld          r13,rq
C 00000113 e7405207  AQR = $29 = $28 ADD 00000014               aqr_add     vb,sp,20
C 00000114 eb800305  $14 = RQ OR 00000000                       ld          r14,rq
C 00000115 e7406207  AQR = $29 = $28 ADD 00000018               aqr_add     vb,sp,24
C 00000116 ebc00305  $15 = RQ OR 00000000                       ld          r15,rq
C 00000117 e7407207  AQR = $29 = $28 ADD 0000001c               aqr_add     vb,sp,28
C 00000118 ec000305  $16 = RQ OR 00000000                       ld          r16,rq
C 00000119 e7408207  AQR = $29 = $28 ADD 00000020               aqr_add     vb,sp,32
C 0000011a ec400305  $17 = RQ OR 00000000                       ld          r17,rq
C 0000011b e7409207  AQR = $29 = $28 ADD 00000024               aqr_add     vb,sp,36
C 0000011c ec800305  $18 = RQ OR 00000000                       ld          r18,rq
C 0000011d e740a207  AQR = $29 = $28 ADD 00000028               aqr_add     vb,sp,40
C 0000011e ecc00305  $19 = RQ OR 00000000                       ld          r19,rq
C 0000011f e740b207  AQR = $29 = $28 ADD 0000002c               aqr_add     vb,sp,44
C 00000120 ed000305  $20 = RQ OR 00000000                       ld          r20,rq
C 00000121 e740c207  AQR = $29 = $28 ADD 00000030               aqr_add     vb,sp,48
C 00000122 ed400305  $21 = RQ OR 00000000                       ld          r21,rq
C 00000123 e740d207  AQR = $29 = $28 ADD 00000034               aqr_add     vb,sp,52
C 00000124 ed800305  $22 = RQ OR 00000000                       ld          r22,rq
C 00000125 e700f207  AQR = $28 = $28 ADD 0000003c               aqr_add     sp,sp,60
C 00000126 e7001205  $28 = $28 ADD 00000004                     add         sp,sp,4
C 00000127 e800030c  J RQ OR 00000000                           j           rq
C 00000128                                              .L15:
C 00000128 00401605  $1 = $0 ADD 00000005                       ld          r1,5
C 00000129 17400445  $29 = $2 SUB $1                            sub         vb,r2,r1
C 0000012a f800da0a  JZ PC ADD 00000036                         jz          .L29
C 0000012b 78c00305  $3 = $15 OR 00000000                       ld          r3,r15
C 0000012c 00000003* LINK = 00000000                            long_call   _udp_freePort
C 0000012d f0000308* CALL LINK OR 00000000              
C 0000012e 58c00305  $3 = $11 OR 00000000                       ld          r3,r11
C 0000012f 00000003* LINK = 00000000                            long_call   _enet_free
C 00000130 f0000308* CALL LINK OR 00000000              
C 00000131 e740e207  AQR = $29 = $28 ADD 00000038               aqr_add     vb,sp,56
C 00000132 e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 00000133 00000003* LINK = 00000000                            long_call   _udp_recvDone
C 00000134 f0000308* CALL LINK OR 00000000              
C 00000135 00000003* LINK = 00000000                            long_ld     r10,.LC2
C 00000136 f2803b05* $10 = LINK OR 0000000e             
C 00000137 f800be4c  J PC SUB 0000002f                          j           .L13
C 00000138                                              .L28:
C 00000138 70c00305  $3 = $14 OR 00000000                       ld          r3,r14
C 00000139 69000305  $4 = $13 OR 00000000                       ld          r4,r13
C 0000013a b0000308  CALL $22 OR 00000000                       call        r22
C 0000013b e740e207  AQR = $29 = $28 ADD 00000038               aqr_add     vb,sp,56
C 0000013c e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 0000013d 1f400ec7  AQR = $29 = $3 ANDN 00000003               aqr_andn    vb,r3,3     // fetch word
C 0000013e e883fe85  $2 = RQ AND 000000ff                       and         r2,rq,255
C 0000013f 10403e85  $1 = $2 AND 0000000f                       and         r1,r2,15
C 00000140 08440301  $1 = $1 OR 00000000 LSL 2                  lsl         r1,r1,2
C 00000141 1e000405  $24 = $3 ADD $1                            add         t1,r3,r1
C 00000142 c7400ac7  AQR = $29 = $24 ANDN 00000002              aqr_andn    vb,t1,2     // fetch word
C 00000143 07600640  $29 = $0 SUB 00000001 LSR 16               sub_lsr     vb,zero,1,16
C 00000144 e8407485  $1 = RQ AND $29                            and         r1,rq,vb
C 00000145 5e005a05  $24 = $11 ADD 00000016                     add         t1,r11,22
C 00000146 0e400305  $25 = $1 OR 00000000                       ld          t2,r1
C 00000147 c7440a81  $29 = $24 AND 00000002 LSL 2               and_lsl     vb,t1,2,2
C 00000148 00000003* LINK = 00000000                            x_lli       ___codetable_store_half_8i
C 00000149 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 0000014a 06690301  $25 = $0 OR 00000040 LSL 20                or_lsl      t2,zero,64,20
C 0000014b af400ac7  AQR = $29 = $21 ANDN 00000002              aqr_andn    vb,r21,2    // fetch word
C 0000014c 07407506  AQW = $29 = $0 OR $29                      aqw_ld      vb,vb       // store word
C 0000014d ee200300  $24 = RQ OR 00000000 LSR 16                lsr         t1,rq,16    // read, rotate, mask half 0
C 0000014e c7e06502  WQ = $31 = $24 OR $25 ROR 16               or_rol      wq,t1,t2,16 // insert half 0, rotate, write
C 0000014f 66000a05  $24 = $12 ADD 00000002                     add         t1,r12,2
C 00000150 c7420a81  $29 = $24 AND 00000002 LSL 1               and_lsl     vb,t1,2,1
C 00000151 00000003* LINK = 00000000                            x_lli       ___codetable_fetch_half_4i
C 00000152 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000153 c8400305  $1 = $25 OR 00000000                       ld          r1,t2
C 00000154 ae000a05  $24 = $21 ADD 00000002                     add         t1,r21,2
C 00000155 0e400305  $25 = $1 OR 00000000                       ld          t2,r1
C 00000156 c7440a81  $29 = $24 AND 00000002 LSL 2               and_lsl     vb,t1,2,2
C 00000157 00000003* LINK = 00000000                            x_lli       ___codetable_store_half_8i
C 00000158 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000159 a0000308  CALL $20 OR 00000000                       call        r20
C 0000015a 0047fe05  $1 = $0 ADD 000001ff                       ld          r1,511
C 0000015b 0f403445  $29 = $1 SUB $13                           sub         vb,r1,r13
C 0000015c f800960b  JC PC ADD 00000025                         jc          .L20
C 0000015d 84000605  $16 = $16 ADD 00000001                     add         r16,r16,1
C 0000015e 02401205  $9 = $0 ADD 00000004                       ld          r9,4
C 0000015f f802524c  J PC SUB 00000094                          j           .L21
C 00000160                                              .L29:
C 00000160 70403405  $1 = $14 ADD $13                           add         r1,r14,r13
C 00000161 0e000645  $24 = $1 SUB 00000001                      sub         t1,r1,1
C 00000162 064000c5  $25 = $0 ANDN $0                           ld          t2,0
C 00000163 c7460e81  $29 = $24 AND 00000003 LSL 3               and_lsl     vb,t1,3,3
C 00000164 00000003* LINK = 00000000                            x_lli       ___codetable_store_byte_8i
C 00000165 f0007408  CALL LINK ADD $29                          call_add    link,vb
C 00000166 78c00305  $3 = $15 OR 00000000                       ld          r3,r15
C 00000167 00000003* LINK = 00000000                            long_call   _udp_freePort
C 00000168 f0000308* CALL LINK OR 00000000              
C 00000169 58c00305  $3 = $11 OR 00000000                       ld          r3,r11
C 0000016a 00000003* LINK = 00000000                            long_call   _enet_free
C 0000016b f0000308* CALL LINK OR 00000000              
C 0000016c 70c00305  $3 = $14 OR 00000000                       ld          r3,r14
C 0000016d 00000003* LINK = 00000000                            long_call   _strlen
C 0000016e f0000308* CALL LINK OR 00000000              
C 0000016f 0a400605  $9 = $1 ADD 00000001                       add         r9,r1,1
C 00000170 48c00305  $3 = $9 OR 00000000                        ld          r3,r9
C 00000171 00000003* LINK = 00000000                            long_call   _malloc
C 00000172 f0000308* CALL LINK OR 00000000              
C 00000173 0a800305  $10 = $1 OR 00000000                       ld          r10,r1
C 00000174 08c00305  $3 = $1 OR 00000000                        ld          r3,r1
C 00000175 71000305  $4 = $14 OR 00000000                       ld          r4,r14
C 00000176 49400305  $5 = $9 OR 00000000                        ld          r5,r9
C 00000177 00000003* LINK = 00000000                            long_call   _strncpy
C 00000178 f0000308* CALL LINK OR 00000000              
C 00000179 e740e207  AQR = $29 = $28 ADD 00000038               aqr_add     vb,sp,56
C 0000017a e8c00305  $3 = RQ OR 00000000                        ld          r3,rq
C 0000017b 00000003* LINK = 00000000                            long_call   _udp_recvDone
C 0000017c f0000308* CALL LINK OR 00000000              
C 0000017d f801d64c  J PC SUB 00000075                          j           .L13
C 0000017e                                              .L27:
C 0000017e 00800e05  $2 = $0 ADD 00000003                       ld          r2,3
C 0000017f 02401205  $9 = $0 ADD 00000004                       ld          r9,4
C 00000180 f8036e4c  J PC SUB 000000db                          j           .L11
C 00000181                                              .L20:
C 00000181 58c00305  $3 = $11 OR 00000000                       ld          r3,r11
C 00000182 01001205  $4 = $0 ADD 00000004                       ld          r4,4
C 00000183 00000003* LINK = 00000000                            long_call   _udp_send
C 00000184 f0000308* CALL LINK OR 00000000              
C 00000185 78c00305  $3 = $15 OR 00000000                       ld          r3,r15
C 00000186 00000003* LINK = 00000000                            long_call   _udp_freePort
C 00000187 f0000308* CALL LINK OR 00000000              
C 00000188 58c00305  $3 = $11 OR 00000000                       ld          r3,r11
C 00000189 00000003* LINK = 00000000                            long_call   _enet_free
C 0000018a f0000308* CALL LINK OR 00000000              
C 0000018b 028000c5  $10 = $0 ANDN $0                           ld          r10,0
C 0000018c f802124c  J PC SUB 00000084                          j           .L13
                                                                .size   _tftp_get, .-_tftp_get
                                                                .ident  "GCC: (GNU) 4.3.3"

assume   $0 = 00000000

                        .text + 0000018d     .
                        .text + 000000a5     .L11
                        .text + 000000cc     .L12
                        .text + 00000108     .L13
                        .text + 000000fc     .L14
                        .text + 00000128     .L15
                        .text + 00000181     .L20
                        .text + 000000cb     .L21
                        .text + 00000090     .L23
                        .text + 0000017e     .L27
                        .text + 00000138     .L28
                        .text + 00000160     .L29
                        .text + 0000001a     .L3
                        .text + 00000031     .L4
                        .text + 000000af     .L9
                        .data + 00000000     .LC0
                        .data + 00000006     .LC1
                        .data + 0000000e     .LC2
                             <undefined>  E  ___codetable_fetch_byte_4i
                             <undefined>  E  ___codetable_fetch_half_4i
                             <undefined>  E  ___codetable_store_byte_8i
                             <undefined>  E  ___codetable_store_half_8i
                        .text + 00000000  G  _appendStr
                             <undefined>  E  _enet_alloc
                             <undefined>  E  _enet_free
                             <undefined>  E  _malloc
                             <undefined>  E  _strlen
                             <undefined>  E  _strncpy
                        .text + 00000034  G  _tftp_get
                             <undefined>  E  _udp_allocPort
                             <undefined>  E  _udp_freePort
                             <undefined>  E  _udp_recv
                             <undefined>  E  _udp_recvDone
                             <undefined>  E  _udp_send
                                00000000     code.rota
                                00000001     code.step
                                00000002     data.rota
                                00000004     data.step
                                     $23     fp
                                    link     link
                                     $27     p1
                                      pc     pc
                                      $1     r1
                                     $10     r10
                                     $11     r11
                                     $12     r12
                                     $13     r13
                                     $14     r14
                                     $15     r15
                                     $16     r16
                                     $17     r17
                                     $18     r18
                                     $19     r19
                                      $2     r2
                                     $20     r20
                                     $21     r21
                                     $22     r22
                                      $3     r3
                                      $4     r4
                                      $5     r5
                                      $6     r6
                                      $7     r7
                                      $8     r8
                                      $9     r9
                                      rq     rq
                                     $28     sp
                                     $24     t1
                                     $25     t2
                                     $26     t3
                                     $29     vb
                                      $0     void
                                      wq     wq
                                      $0     zero
